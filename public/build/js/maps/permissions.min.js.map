{"version":3,"sources":["permissions.js"],"names":["permissions","allPermissions","createlog","editlog","viewlog","addcat","editcat","deletecat","adduser","edituser","deleteuser","addgroup","editgroup","deletegroup","viewcheesto","updatecheesto","admin","currentPermissions","getList","$","get","done","json","select","attr","append","key","data","hasOwnProperty","group","id","role","empty","getPermissions","gid","value","groupid","showPermissions","this","drawGrid","css","savePermissions","newPermissions","getGrid","val","newPermissionsJson","JSON","stringify","post","rights","alert","reset","checkGrid","permission","changed","newGrid","theID","is","goBack","createNew","dialog","height","width","modal","buttons","Create Group","sendNew","Cancel","name","response","html","show","effect","duration","hide","Ok","deleteGroup","delGroup","text","resizable","Delete Group","object","getID","prop","theGrid","parse","check","e","keyCode","preventDefault"],"mappings":"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","file":"permissions.min.js","sourcesContent":["/* global $, alert */\n\n\"use strict\"; // jshint ignore:line\n\nvar permissions = {\n    // All permissions to reference for iteration\n    allPermissions: {\n      'createlog': false,\n      'editlog': false,\n      'viewlog': false,\n\n      'addcat': false,\n      'editcat': false,\n      'deletecat': false,\n\n      'adduser': false,\n      'edituser': false,\n      'deleteuser': false,\n\n      'addgroup': false,\n      'editgroup': false,\n      'deletegroup': false,\n\n      'viewcheesto': false,\n      'updatecheesto': false,\n\n      'admin': false,\n    },\n\n    currentPermissions: {\n    },\n\n    getList: function() {\n        $.get('api/i/rights/getlist', {}, null, 'json')\n          .done(function(json) {\n            // Build select dropdown of current user groups\n            var select = $('<select/>').attr('id', 'groupList');\n            select.append('<option value=\"0\">Select:</option>');\n\n            for (var key in json.data) {\n                if (!json.data.hasOwnProperty(key))\n                    continue;\n\n                var group = json.data[key];\n                select.append('<option value=\"' + group.id + '\">' + group.role + '</option>');\n            }\n\n            $('#groups').empty();\n            $('#groups').append(select);\n          });\n    },\n\n    getPermissions: function(gid) {\n        var group = typeof gid !== 'undefined' ? gid : $(\"#groupList\")[0].value;\n\n        $.get('api/i/rights/getgroup', {groupid: group}, null, 'json')\n            .done(function(json) {\n                permissions.showPermissions(json.data);\n            });\n    },\n\n    showPermissions: function(json) {\n        this.currentPermissions = json;\n\n        this.drawGrid(json);\n\n        $(\"#permissionsBlock\").css( \"display\", \"block\" );\n\n        return true;\n    },\n\n    savePermissions: function() {\n        // Copy allPermissions\n        var newPermissions = this.getGrid();\n        var group = $(\"#groupList\").val();\n\n        if (group !== 0) {\n\t\t\tvar newPermissionsJson = JSON.stringify(newPermissions);\n\n\t\t\t$.post('api/i/rights/save', { rights: newPermissionsJson, groupid: group }, null, 'json')\n\t\t\t\t.done(function( json ) {\n\t\t\t\t\talert(json.data);\n\t\t\t\t\t$(\"#permissionsForm\")[0].reset();\n\t\t\t\t\t$(\"#permissionsBlock\").css( \"display\", \"none\" );\n\t\t\t\t\t$(\"#groupList\").val( 0 );\n\t\t\t\t});\n        }\n    },\n\n    checkGrid: function(permission) {\n\t\tvar newGrid = this.allPermissions;\n\t\tvar theID = \"#\"+permission;\n\t\tvar changed;\n\n\t\tif (permission == 'admin') {\n\t\t\tif ($(theID).is( \":checked\" )) {\n\t\t\t\t// An admin user has full permissions, basically a select all\n\t\t\t\tfor (var key in newGrid) {\n\t\t\t\t\tif (newGrid.hasOwnProperty(key)) {\n\t\t\t\t\t\tnewGrid[key] = true;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tthis.drawGrid(newGrid);\n\t\t\t}\n\t\t\telse {\n\t\t\t\t// Revert to original permissions grid\n\t\t\t\tchanged = this.currentPermissions;\n\t\t\t\tchanged[permission] = false;\n\t\t\t\tthis.drawGrid(changed);\n\t\t\t}\n\t\t}\n\n\t\telse if (permission == 'createlog' || permission == 'editlog') {\n\t\t\t// Creating and editing a log inherently means the user can view logs\n\t\t\tif ($(theID).is( \":checked\" )) {\n\t\t\t\tchanged = this.getGrid();\n\t\t\t\tchanged.viewlog = true;\n\t\t\t\tchanged[permission] = true;\n\t\t\t\tthis.drawGrid(changed);\n\t\t\t}\n\t\t}\n\n\t\telse if (permission == 'updatecheesto') {\n\t\t\tif ($(theID).is( \":checked\" )) {\n\t\t\t\tchanged = this.getGrid();\n\t\t\t\tchanged.viewcheesto = true;\n\t\t\t\tchanged[permission] = true;\n\t\t\t\tthis.drawGrid(changed);\n\t\t\t}\n\t\t}\n    },\n\n    goBack: function() {\n\t\tthis.drawGrid(this.currentPermissions);\n    },\n\n    createNew: function() {\n        $( \"#add-form\" ).dialog({\n          height: 225,\n          width: 350,\n          modal: true,\n          buttons: {\n            \"Create Group\": function() {\n                permissions.sendNew();\n                $( this ).dialog( \"close\" );\n            },\n            Cancel: function() {\n              $( this ).dialog( \"close\" );\n            }\n          }\n        });\n    },\n\n    sendNew: function() {\n        $.post('api/i/rights/create',\n\t\t\t{ name: $(\"#name\").val(), rights: JSON.stringify(permissions.allPermissions) }, null, 'json')\n          .done(function(response) {\n              $( \"#dialogBox\" ).html( response.data );\n              $( \"#dialogBox\" ).dialog({\n                  modal: true,\n                  width: 400,\n                  show: {\n                    effect: \"fade\",\n                    duration: 500\n                  },\n                  hide: {\n                    effect: \"fade\",\n                    duration: 500\n                  },\n                  buttons: {\n                    Ok: function() {\n                      $( this ).dialog( \"close\" );\n                    }\n                  }\n                });\n\n                $(\"#permissionsForm\")[0].reset();\n                $(\"#permissionsBlock\").css( \"display\", \"none\" );\n                permissions.getList();\n          });\n    },\n\n    deleteGroup: function() {\n        var delGroup = $(\"#groupList option:selected\").text();\n\n        $( \"#dialogBox\" ).html( \"<p>Do you really want to delete the group '\"+delGroup+\"'?</p>\" );\n        $( \"#dialogBox\" ).dialog({\n          resizable: false,\n          modal: true,\n          buttons: {\n            \"Delete Group\": function() {\n                $( this ).dialog( \"close\" );\n\n                var group = $(\"#groupList\").val();\n\n                $.post('api/i/rights/delete', { groupid: group }, null, 'json')\n                  .done(function( json ) {\n\n                      $( \"#dialogBox\" ).html( \"<p>\"+json.data+\"</p>\" );\n                      $( \"#dialogBox\" ).dialog({\n                          modal: true,\n                          width: 400,\n                          show: {\n                            effect: \"fade\",\n                            duration: 500\n                          },\n                          hide: {\n                            effect: \"fade\",\n                            duration: 500\n                          },\n                          buttons: {\n                            Ok: function() {\n                              $( this ).dialog( \"close\" );\n                            }\n                          }\n                        });\n\n\t\t\t\t\t\t$(\"#permissionsForm\")[0].reset();\n\t\t\t\t\t\t$(\"#permissionsBlock\").css( \"display\", \"none\" );\n                        permissions.getList();\n                  });\n            },\n            Cancel: function() {\n              $( this ).dialog( \"close\" );\n            }\n          }\n        });\n    },\n\n    drawGrid: function(object) {\n\t\tfor (var key in object) {\n           if (object.hasOwnProperty(key)) {\n              var getID = \"#\"+key;\n\n              $(getID).prop( \"checked\", object[key] );\n           }\n        }\n\n        return true;\n    },\n\n    getGrid: function() {\n\t\tvar theGrid = JSON.parse(JSON.stringify(this.allPermissions));\n\n\t\tfor (var key in theGrid) {\n\t\t\tif (theGrid.hasOwnProperty(key)) {\n\t\t\t\tvar getID = \"#\"+key;\n\n\t\t\t\ttheGrid[key] = $(getID).prop( \"checked\" );\n\t\t\t}\n\t\t}\n\n\t\treturn theGrid;\n    },\n\n    // Checks if enter key was pressed, if so submit the form\n    check: function(e) {\n        if (e.keyCode == 13) {\n            $( \"#add-form\" ).dialog( \"close\" );\n            this.sendNew();\n            e.preventDefault();\n        }\n    },\n};\n"],"sourceRoot":"/source/"}