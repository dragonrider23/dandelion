{"version":3,"sources":["userManager.js"],"names":["userManager","rights","currentuid","init","this","getUsersRights","loadCommandList","loadUserList","$","ajax","async","dataType","done","json","errorcode","data","alert","status","commands","attr","append","adduser","deleteuser","edituser","prepend","getJSON","displayUserList","html","userdata","userTable","header","key","hasOwnProperty","user","userid","realname","username","role","datecreated","theme","firsttime","empty","performAction","action","val","prop","uid","uiforms","add","password","fullname","group","post","edit","prompt","delete","console","log","reset","pass1","pass2","pw","cxeesto","message","returntime","revokeKey"],"mappings":"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","file":"userManager.min.js","sourcesContent":["/* global $, alert, console */\n\n\"use strict\"; // jshint ignore:line\n\nvar userManager = {\n\trights: {},\n    currentuid: null,\n\n\tinit: function() {\n\t\tthis.getUsersRights();\n\t\tthis.loadCommandList();\n\t\tthis.loadUserList();\n\t},\n\n\tgetUsersRights: function() {\n        $.ajax('api/i/rights/getUsersRights', {\n        \tasync: false, // To ensure permissions are loaded before command list is generated\n        \tdataType: 'json'\n        })\n            .done(function(json) {\n            \tif (json.errorcode === 0) {\n\t\t\t\t\tuserManager.rights = json.data;\n            \t} else {\n            \t\talert(json.status);\n            \t}\n            \treturn;\n            });\n        return;\n\t},\n\n\tloadCommandList: function() {\n\t\tvar commands = $('<select/>').attr('id', 'commands');\n\n\t\tcommands.append('<option value=\"\">Select Command:</option>');\n\n\t    if (this.rights.adduser) {\n            commands.append('<option value=\"add\">Add User</option>');\n        }\n\n        if (this.rights.deleteuser) {\n            commands.append('<option value=\"delete\">Delete</option>');\n        }\n\n        if (this.rights.edituser) {\n            commands.append('<option value=\"edit\">Edit</option>');\n            commands.append('<option value=\"reset\">Reset Password</option>');\n            commands.append('<option value=\"cxeesto\">Change &#264;eesto</option>');\n            commands.append('<option value=\"revokeKey\">Revoke API Key</option>');\n        }\n\n        $('#userManageForm').prepend(commands);\n        return;\n\t},\n\n\tloadUserList: function() {\n\t\t$.getJSON(\"api/i/users/getUsersList\",\n                    function(data){\n                    \tif (data.errorcode === 0) {\n                    \t\tuserManager.displayUserList(data.data);\n                    \t} else {\n                    \t\t$('#userlist').html(data.status);\n                    \t}\n                    \treturn;\n                \t});\n\t\treturn;\n\t},\n\n\tdisplayUserList: function(userdata) {\n\t\tvar userTable = $('<table/>');\n        // jshint multistr:true\n\t\tvar header = '<tr>\\\n\t\t                <th>&nbsp;</th>\\\n\t\t                <th>Real Name</th>\\\n\t\t                <th>Username</th>\\\n\t\t                <th>Role</th>\\\n\t\t                <th>Date Created</th>\\\n\t\t                <th>Theme</th>\\\n\t\t                <th>First Login</th>\\\n\t\t            </tr>';\n        userTable.append(header);\n\n        for (var key in userdata) {\n            if (!userdata.hasOwnProperty(key))\n                continue;\n\n\t\t\tvar user = userdata[key];\n            var html = '<tr>\\\n\t                    \t<td><input type=\"radio\" name=\"uid\" value=\"' + user.userid + '\"></td>\\\n\t                    \t<td style=\"text-align: left;\">' + user.realname + '</td>\\\n\t                    \t<td>' + user.username + '</td>\\\n\t                    \t<td>' + user.role + '</td>\\\n\t                    \t<td>' + user.datecreated + '</td>\\\n\t                    \t<td>' + user.theme + '</td>\\\n\t                    \t<td>' + user.firsttime + '</td>\\\n                    \t</tr>';\n        \tuserTable.append(html);\n        }\n\n\t\t$('#userlist').empty();\n        $('#userlist').append(userTable);\n        return;\n\t},\n\n\tperformAction: function() {\n        // Get the action to perform\n\t\tvar action = $('#commands').val();\n\t\t$('#commands').prop(\"selectedIndex\", 0);\n\t\tif (action === '') {\n\t\t\treturn false;\n\t\t}\n\n        // Make sure a user is selected\n        var uid = $('input[name=uid]:checked').val();\n        if (typeof uid == 'undefined' && action != 'add') {\n            return false;\n        }\n        this.currentuid = uid;\n\n        // Show dialog for action\n\t\tuserManager.uiforms[action]();\n\t\treturn;\n\t},\n\n\tadd: function() { // Create user\n\t\tvar username = $('#add_user').val();\n        var password = $('#add_pass').val();\n        var fullname = $('#add_fullname').val();\n        var group = $('#add_group').val();\n\n        $.post('api/i/users/create', {username: username, password: password, fullname: fullname, role: group}, null, 'json')\n            .done(function(data) {\n                userManager.loadUserList();\n            });\n        return;\n\t},\n\n\tedit: function() { // Edit user\n        var uid = $('#edit_uid').val();\n        var theme = $('#edit_theme').val();\n        var fullname = $('#edit_fullname').val();\n        var group = $('#edit_group').val();\n        var prompt = $('#edit_prompt').val();\n\n        $.post('api/i/users/save', {uid: uid, fullname: fullname, role: group, prompt: prompt, theme: theme}, null, 'json')\n            .done(function(data) {\n                userManager.loadUserList();\n            });\n        return;\n\t},\n\n\tdelete: function() { // Delete user\n        $.post('api/i/users/delete', {uid: userManager.currentuid}, null, 'json')\n            .done(function(data) {\n                if (data.errorcode === 0 && data.data === true) {\n                    console.log('Success');\n                    userManager.loadUserList();\n                }\n            });\n        return;\n\t},\n\n\treset: function() { // Reset user password\n        var pass1 = $('#pass1').val();\n        var pass2 = $('#pass2').val();\n        $(\"#pass1\").val('');\n        $(\"#pass2\").val('');\n\n        if (pass1 === pass2 && pass1 !== \"\") {\n            $.post('api/i/users/resetPassword', {pw: pass1, uid: userManager.currentuid}, null, \"json\")\n                .done(function(data) {\n                    if (data.errorcode === 0 && data.data === true) {\n                        console.log('Success');\n                    }\n                });\n        } else {\n            alert('Passwords do not match or are empty');\n        }\n        return;\n\t},\n\n\tcxeesto: function() { // Change user status\n        var uid = $('#status_uid').val();\n        var status = $(\"select#status_text\").prop(\"selectedIndex\") - 1;\n        var message = $('#status_message').val();\n        var returntime = $('#status_return').val();\n\n        $.post('api/i/cheesto/update', {uid: uid, status: status, returntime: returntime, message: message}, null, 'json')\n            .done(function(data) {\n                userManager.loadUserList();\n            });\n        return;\n\t},\n\n\trevokeKey: function() { // Revoke user's api key\n\t\t$.post('api/i/keymanager/revokekey', {uid: userManager.currentuid}, null, 'json')\n            .done(function(data) {\n                if (data.errorcode === 0 && data.data.key === true) {\n                    console.log('Success');\n                }\n            });\n        return;\n\t},\n};\n"],"sourceRoot":"/source/"}